name: build
on: [push]
env:
  GH_REGISTRY: ghcr.io # Github Container Registry
  FULL_IMAGE_NAME: ${{ github.repository }} # full image name: owner/image
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DeterminateSystems/nix-installer-action@de22e16c4711fca50c816cc9081563429d1cf563
        with:
          diagnostic-endpoint:
      - name: Build
        run: |
          nix build --print-build-logs
      - name: Check
        run: |
          nix flake check

      # Set up Go with latest stable version
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable' # This will use the latest stable Go version
          check-latest: true   # Force checking for new versions
          cache: true

      # Build Go binary
      - name: Build Go binary
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -C cmd/alertmanager-ntfy -v -o nvme_exporter

      # Github container registry credentials
      - name: Log in to the Github Container registry ${{ env.GH_REGISTRY }} as ${{ github.actor }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GH_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # tags and labels
      - name: Extract metadata (tags, labels) for image ${{ env.FULL_IMAGE_NAME }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.GH_REGISTRY }}/${{ env.FULL_IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=ref,event=pr
            type=ref,event=branch

      # build OCI image and push to registries (Docker Hub and Github Container Registry)
      - name: build and push docker image
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MY_VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            MY_BUILTBY=github-action